## Tomcat
#server:
#  tomcat:
#    uri-encoding: utf-8
#    max-threads: 1024 # 最大worker线程  超过1024的之后的请求只能排队，等待有线程释放后，才能被处理
#    min-spare-threads: 30 # 最小worker线程
#    accept-count: 5000
#  port: 8666
#  connection-timeout: 2000ms # 这个配置会在建立一个socket连接后，如果一直没有收到客户端的FIN，也没有数据过来，那么此连接也必须等到10s后，才能被超时释放，
#  servlet:
#    context-path: /photo

spring:
  # 环境 development
  profiles:
    active: dev
  jackson:
    time-zone: GMT+8  # 指定日期格式化时区
    date-format: yyyy-MM-dd HH:mm:ss  # 指定日期格式，比如yyyy-MM-dd HH:mm:ss，或者具体的格式化类的全限定名
    #deserialization: true  # 是否开启Jackson的反序列化
    #serialization: true  # 是否开启jackson的序列化.
  servlet:
    multipart:
      enabled: true  # 开启上传支持（默认：true）
      max-file-size: 100MB # 最大文件大小
      max-request-size: 10MB # 最大请求大小
  redis:
    database: 0 # 连接工厂使用的数据库索引。（默认值： 0 。）
    host: localhost # Redis 服务器主机地址。（默认值： localhost 。）
    port: # Redis 服务器端口。（默认值： 6379 。）
    password: 1211 # Redis 服务器的登录密码。
    timeout: 6000ms  # 连接超时时长（毫秒）
    jedis:
      pool:
        max-active: 10000 # 连接池在指定时间里能分配的最大连接数。负数表示无限制。（默认值： 8 。）
        max-idle: 10 # 连接池里的最大空闲连接数。负数表示空闲连接数可以是无限大。（默认值： 8 。）
        min-idle: 5 # 连接池里要维持的最小空闲连接数。该属性只有在设置为正数时才有效。（默认值： 0 。）
        max-wait: -1ms # 当连接池被耗尽时，分配连接的请求应该在抛出异常前被阻塞多长时间（单位为秒）。负数表示一直阻塞。（默认值： -1 。）
  mvc:
    async:
      request-timeout: 10ms # 异步请求处理超时前的等待时间（单位为毫秒）。如果没有设置该属性，则使用底层实现 的默认超时时间，比如，Tomcat 上使用 Servlet 3 时超时时间为 10 秒。
    ignore-default-model-on-redirect: true # 在重定向的场景下，是否要忽略“默认”模型对象的内容。（默认值： true 。）
    static-path-pattern: /static/**  # 表示所有的访问都经过静态资源路径
  resources:
    add-mappings: true  # 开启默认资源处理。（默认值： true 。）
    static-locations: classpath:/resources  # 设置静态资源的存放地址  默认为 classpath: [/META-INF/resources/, /resources/, /static/, /public/] 加上 context:/（Servlet 上下文的根目录）。
    chain:
      cache: true # 对资源链开启缓存。（默认值： true 。）
      strategy:
        fixed:
          enabled: true # 开启固定版本策略。（默认值： false 。）
          paths: /static # 要运用于固定版本策略的模式列表，用逗号分隔。
          version: 1.0.0 # 用于固定版本策略的版本字符串。
        content:
          enabled: true # 开启内容版本策略。（默认值： false 。）   使用 MD5 作为版本号
          paths: /** #  要运用于版本策略的模式列表，用逗号分隔。（默认值： [/**] 。）
  application:    # rabbitMq 配置信息
    name: spirng-boot-rabbitmq
  rabbitmq:
    host: 127.0.0.1
    port: 5672
    username: guest
    password: guest
  freemarker: # freemarker 配置文件
    request-context-attribute: req  #req访问request
    suffix: .html  #后缀名
    content-type: text/html
    enabled: true
    cache: false #缓存配置
    template-loader-path: classpath:/templates/ #模板加载路径 按需配置
    charset: UTF-8 #编码格式
    settings:
      number_format: '0.##'   #数字格式化，无小数点



# mybatis
mybatis-plus:
  mapper-locations: classpath:mapper/*.xml   # 映射文件位置。 MyBatis Mapper 所对应的 XML 文件位置
  # 实体扫描，多个package用逗号或者分号分隔
  type-aliases-package: com.example.photodemo.entity  # com.example.*.entity  MyBaits 别名包扫描路径，通过该属性可以给包中的类注册别名，注册后在 Mapper 对应的 XML 文件中可以直接使用类名，而不用使用全限定的类名（即 XML 中调用的时候不用包含包名）。
  type-enums-package: com.example.photodemo.enums # 枚举包扫描 ，如果配置了该属性，会将路径下的枚举类进行注入，让实体类字段能够简单快捷的使用枚举属性，
  # check-config-location: false # 启动时是否检查 MyBatis XML 文件的存在，默认不检查。
  configuration:
    map-underscore-to-camel-case: true # 是否开启自动驼峰命名规则（camel case）映射
    cache-enabled: false # 全局地开启或关闭配置文件中的所有映射器已经配置的任何缓存，默认为 true。
    # 指定当结果集中值为 null 的时候是否调用映射对象的 Setter（Map 对象时为 put）方法，通常运用于有 Map.keySet() 依赖或 null 值初始化的情况。
    # 通俗的讲，即 MyBatis 在使用 resultMap 来映射查询结果中的列，如果查询结果中包含空值的列，则 MyBatis 在映射的时候，不会映射这个字段，这就导致在调用到该字段的时候由于没有映射，取不到而报空指针异常。
    call-setters-on-nulls: true
    jdbc-type-for-null: null # 配置JdbcTypeForNull, oracle数据库必须配置
    auto-mapping-unknown-column-behavior: warning # MyBatis 自动映射时未知列或未知属性处理策略 NONE：不做任何处理 (默认值), WARNING：以日志的形式打印相关警告信息, FAILING：当作映射失败处理，并抛出异常和详细信息
  global-config:
    banner: false #
    db-config: # 全局策略中的 DB 策略配置
      # 全局默认主键类型  0:"数据库ID自增", 1:"未设置主键类型",2:"用户输入ID (该类型可以通过自己注册自动填充插件进行填充)", 3:"全局唯一ID (idWorker), 4:全局唯一ID (UUID), 5:字符串全局唯一ID (idWorker 的字符串表示)";
      id-type: auto # UUID
      # 字段验证策略 IGNORED:"忽略判断", NOT_NULL:"非NULL判断", NOT_EMPTY:"非空判断", DEFAULT 默认的,一般只用于注解里(1. 在全局里代表 NOT_NULL,2. 在注解里代表 跟随全局)
      field-strategy: not_empty
      # 数据库大写下划线转换
      capital-mode: true
      # 逻辑删除值
      logic-delete-value: 0
      # 逻辑未删除值
      logic-not-delete-value: 1



